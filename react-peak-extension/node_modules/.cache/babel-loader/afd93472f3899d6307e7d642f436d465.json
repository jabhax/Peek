{"ast":null,"code":"var _jsxFileName = \"/Applications/Peek/react-peak-extension/src/Contexts/ModalProvider.js\";\nimport React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({\n  children\n}) => {\n  const {\n    windowPosition\n  } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({\n      type: \"GET_EXTENSION_ID\"\n    }, \"*\");\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function (event) {\n      if (event.source !== window) return;\n\n      if (event.data.type && event.data.type === \"EXTENSION_ID_RESULT\") {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(ModalContext.Provider, {\n    value: {\n      extensionId,\n      getExtensionId,\n      windowPosition\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default ModalProvider;","map":{"version":3,"sources":["/Applications/Peek/react-peak-extension/src/Contexts/ModalProvider.js"],"names":["React","useEffect","useState","useWindowPosition","ModalContext","createContext","ModalProvider","children","windowPosition","extensionId","setExtensionId","undefined","getExtensionId","window","postMessage","type","addEventListener","event","source","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AAEA,OAAO,MAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAN,CAAoB,EAApB,CAArB;;AAEP,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAqBL,iBAAiB,EAA5C;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACS,SAAD,CAA9C;;AAEA,WAASC,cAAT,GAA0B;AACxBC,IAAAA,MAAM,CAACC,WAAP,CAAmB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAnB,EAAiD,GAAjD;AACD;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACd;AACAY,IAAAA,MAAM,CAACG,gBAAP,CAAwB,SAAxB,EAAmC,UAASC,KAAT,EAAgB;AACjD,UAAIA,KAAK,CAACC,MAAN,KAAiBL,MAArB,EAA6B;;AAC7B,UAAII,KAAK,CAACE,IAAN,CAAWJ,IAAX,IAAoBE,KAAK,CAACE,IAAN,CAAWJ,IAAX,KAAoB,qBAA5C,EAAoE;AAClEL,QAAAA,cAAc,CAACO,KAAK,CAACE,IAAN,CAAWV,WAAZ,CAAd;AACD;AACF,KALD;AAMD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,WAAF;AAAeG,MAAAA,cAAf;AAA+BJ,MAAAA;AAA/B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,QADJ,CADF;AAKD,CAvBD;;AAyBA,eAAeD,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider value={{ extensionId, getExtensionId, windowPosition, }}>\n      { children }\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n"]},"metadata":{},"sourceType":"module"}
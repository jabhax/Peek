{"ast":null,"code":"import _slicedToArray from\"/Applications/Peek/react-peak-extension/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import useWindowPosition from'../Hooks/useWindowPosition';export var ModalContext=React.createContext({});var ModalProvider=function ModalProvider(_ref){var children=_ref.children;var _useWindowPosition=useWindowPosition(),windowPosition=_useWindowPosition.windowPosition;var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),extensionId=_useState2[0],setExtensionId=_useState2[1];function getExtensionId(){window.postMessage({type:\"GET_EXTENSION_ID\"},\"*\");}useEffect(function(){// Set up event listeners from Content script\nwindow.addEventListener(\"message\",function(event){if(event.source!==window)return;if(event.data.type&&event.data.type===\"EXTENSION_ID_RESULT\"){setExtensionId(event.data.extensionId);}});},[]);return React.createElement(ModalContext.Provider,{value:{extensionId:extensionId,getExtensionId:getExtensionId,windowPosition:windowPosition}},children);};export default ModalProvider;","map":{"version":3,"sources":["/Applications/Peek/react-peak-extension/src/Contexts/ModalProvider.js"],"names":["React","useEffect","useState","useWindowPosition","ModalContext","createContext","ModalProvider","children","windowPosition","undefined","extensionId","setExtensionId","getExtensionId","window","postMessage","type","addEventListener","event","source","data"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,iBAAP,KAA8B,4BAA9B,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGJ,KAAK,CAACK,aAAN,CAAoB,EAApB,CAArB,CAEP,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,wBACXJ,iBAAiB,EADN,CAC9BK,cAD8B,oBAC9BA,cAD8B,eAEAN,QAAQ,CAACO,SAAD,CAFR,wCAE/BC,WAF+B,eAElBC,cAFkB,eAItC,QAASC,CAAAA,cAAT,EAA0B,CACxBC,MAAM,CAACC,WAAP,CAAmB,CAAEC,IAAI,CAAE,kBAAR,CAAnB,CAAiD,GAAjD,EACD,CAEDd,SAAS,CAAC,UAAM,CACd;AACAY,MAAM,CAACG,gBAAP,CAAwB,SAAxB,CAAmC,SAASC,KAAT,CAAgB,CACjD,GAAIA,KAAK,CAACC,MAAN,GAAiBL,MAArB,CAA6B,OAC7B,GAAII,KAAK,CAACE,IAAN,CAAWJ,IAAX,EAAoBE,KAAK,CAACE,IAAN,CAAWJ,IAAX,GAAoB,qBAA5C,CAAoE,CAClEJ,cAAc,CAACM,KAAK,CAACE,IAAN,CAAWT,WAAZ,CAAd,CACD,CACF,CALD,EAMD,CARQ,CAQN,EARM,CAAT,CAUA,MACE,qBAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLA,WAAW,CAAXA,WADK,CAELE,cAAc,CAAdA,cAFK,CAGLJ,cAAc,CAAdA,cAHK,CADT,EAOGD,QAPH,CADF,CAWD,CA7BD,CA+BA,cAAeD,CAAAA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport useWindowPosition from '../Hooks/useWindowPosition';\n\nexport const ModalContext = React.createContext({});\n\nconst ModalProvider = ({ children }) => {\n  const { windowPosition } = useWindowPosition();\n  const [extensionId, setExtensionId] = useState(undefined);\n\n  function getExtensionId() {\n    window.postMessage({ type: \"GET_EXTENSION_ID\" }, \"*\");\n  }\n\n  useEffect(() => {\n    // Set up event listeners from Content script\n    window.addEventListener(\"message\", function(event) {\n      if (event.source !== window) return;\n      if (event.data.type && (event.data.type === \"EXTENSION_ID_RESULT\")) {\n        setExtensionId(event.data.extensionId);\n      }\n    });\n  }, []);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        extensionId,\n        getExtensionId,\n        windowPosition,\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n"]},"metadata":{},"sourceType":"module"}